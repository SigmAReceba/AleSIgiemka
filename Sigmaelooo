Clear-Host

Write-Host @"
  ██████╗ ███████╗██████╗     ██╗      ██████╗ ████████╗██╗   ██╗███████╗         
  ██╔══██╗██╔════╝██╔══██╗    ██║     ██╔═══██╗╚══██╔══╝██║   ██║██╔════╝         
  ██████╔╝█████╗  ██║  ██║    ██║     ██║   ██║   ██║   ██║   ██║███████╗         
  ██╔══██╗██╔══╝  ██║  ██║    ██║     ██║   ██║   ██║   ██║   ██║╚════██║         
  ██║  ██║███████╗██████╔╝    ███████╗╚██████╔╝   ██║   ╚██████╔╝███████║         
  ╚═╝  ╚═╝╚══════╝╚═════╝     ╚══════╝ ╚═════╝    ╚═╝    ╚═════╝ ╚══════╝         
                                                                                  
  ███████╗██╗ ██████╗ ███╗   ██╗ █████╗ ████████╗██╗   ██╗██████╗ ███████╗███████╗
  ██╔════╝██║██╔════╝ ████╗  ██║██╔══██╗╚══██╔══╝██║   ██║██╔══██╗██╔════╝██╔════╝
  ███████╗██║██║  ███╗██╔██╗ ██║███████║   ██║   ██║   ██║██████╔╝█████╗  ███████╗
  ╚════██║██║██║   ██║██║╚██╗██║██╔══██║   ██║   ██║   ██║██╔══██╗██╔══╝  ╚════██║
  ███████║██║╚██████╔╝██║ ╚████║██║  ██║   ██║   ╚██████╔╝██║  ██║███████╗███████║
  ╚══════╝╚═╝ ╚═════╝ ╚═╝  ╚═══╝╚═╝  ╚═╝   ╚═╝    ╚═════╝ ╚═╝  ╚═╝╚══════╝╚══════╝
"@ -ForegroundColor Red
Write-Host ""
Write-Host "  Made by Bacanoicua kjj - " -ForegroundColor Blue -NoNewline
Write-Host -ForegroundColor Red "discord.gg/redlotus"

Write-Host ""

# Sprawdzenie czy skrypt jest uruchamiany jako administrator
function Test-Admin {
    $currentUser = New-Object Security.Principal.WindowsPrincipal $([Security.Principal.WindowsIdentity]::GetCurrent())
    $currentUser.IsInRole([Security.Principal.WindowsBuiltinRole]::Administrator)
}

if (!(Test-Admin)) {
    Write-Warning "Please Run This Script as Administrator."
    Start-Sleep 10
    Exit
}

Start-Sleep -Seconds 3
Clear-Host

$host.privatedata.ProgressForegroundColor = "red"
$host.privatedata.ProgressBackgroundColor = "black"

# Usuń istniejące pliki Receba.txt i Jarki.txt
$recebaFilePath = "Receba.txt"
$jarkiFilePath = "Jarki.txt"

if (Test-Path $recebaFilePath) {
    Remove-Item $recebaFilePath -Force
}

if (Test-Path $jarkiFilePath) {
    Remove-Item $jarkiFilePath -Force
}

# Wykonaj komendę fsutil usn readJournal i przekieruj wynik do pliku Receba.txt
try {
    $journalResult = fsutil usn readJournal C: CSV >> $recebaFilePath
    Write-Host "Success: 'fsutil usn readJournal' command executed successfully." -ForegroundColor Green
    Write-Host "File '$recebaFilePath' created." -ForegroundColor Green
} catch {
    Write-Host "Error: failed to execute 'fsutil usn readJournal' command." -ForegroundColor Red
}

# Sprawdź, czy plik Receba.txt został utworzony
if (Test-Path $recebaFilePath) {
    Write-Host "File '$recebaFilePath' exists." -ForegroundColor Yellow
} else {
    Write-Host "Error: '$recebaFilePath' not found." -ForegroundColor Red
}

# Wykonaj komendę findstr na pliku Receba.txt w poszukiwaniu linii zawierających ".jar" i zapisz wynik do pliku jarki.txt
try {
    $findJarResult = fsutil usn readJournal C: CSV | findstr /i /c:.jar >> $jarkiFilePath
    Write-Host "Success: '.jar' files found and saved to '$jarkiFilePath'." -ForegroundColor Green
} catch {
    Write-Host "Error: failed to find and save '.jar' files to '$jarkiFilePath'." -ForegroundColor Red
}

# Sprawdź, czy plik Jarki.txt został utworzony
if (Test-Path $jarkiFilePath) {
    Write-Host "File '$jarkiFilePath' exists." -ForegroundColor Yellow
} else {
    Write-Host "Error: '$jarkiFilePath' not found." -ForegroundColor Red
}
